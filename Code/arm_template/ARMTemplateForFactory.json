{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": ""
        },
        "Azure_Sql_ODS_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'Azure_Sql_ODS'"
        },
        "Blob_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'Blob'"
        },
        "D365_Rest_Service_servicePrincipalKey": {
            "type": "secureString",
            "metadata": "Secure string for 'servicePrincipalKey' of 'D365_Rest_Service'"
        },
        "D365_Rest_Service_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://<CRM Org>.api.crm.dynamics.com/"
        },
        "D365_Rest_Service_properties_typeProperties_servicePrincipalId": {
            "type": "string",
            "defaultValue": ""
        },
        "D365_Rest_Service_properties_typeProperties_tenant": {
            "type": "string",
            "defaultValue": ""
        },
        "D365_Rest_Service_properties_typeProperties_aadResourceId": {
            "type": "string",
            "defaultValue": "https://<CRM Org>.api.crm.dynamics.com/"
        },
        "kv_linkedservice_properties_typeProperties_baseUrl": {
            "type": "string",
            "defaultValue": "https://<KeyVault>.vault.azure.net"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/ds_d365dataset')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "D365_Rest_Service",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "RelativeURL": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "RestResource",
                "typeProperties": {
                    "relativeUrl": {
                        "value": "@dataset().RelativeURL",
                        "type": "Expression"
                    }
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/D365_Rest_Service')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_odssqltable')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Azure_Sql_ODS",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "databaseSchema": {
                        "type": "string",
                        "defaultValue": "dbo"
                    },
                    "tableName": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().databaseSchema",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().tableName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Azure_Sql_ODS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/01 - Master Data Load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Load Entity Sync Data",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:01:40",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "sqlWriterStoredProcedureName": "[[ODS].[usp_LoadEntitySyncData]",
                                "sqlWriterTableType": "ODS.EntitySyncType",
                                "storedProcedureTableTypeParameterName": "Sourcetbl"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['DisplayName']['LocalizedLabels'][0]['Label']"
                                        },
                                        "sink": {
                                            "name": "DisplayName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['LogicalName']"
                                        },
                                        "sink": {
                                            "name": "EntityName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['EntitySetName']"
                                        },
                                        "sink": {
                                            "name": "RelativeURL",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['ChangeTrackingEnabled']"
                                        },
                                        "sink": {
                                            "name": "ChangeTrackingEnabled",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['IsIntersect']"
                                        },
                                        "sink": {
                                            "name": "IsNNRelationShip",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['PrimaryIdAttribute']"
                                        },
                                        "sink": {
                                            "name": "PrimaryIdAttribute",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['IsBPFEntity']"
                                        },
                                        "sink": {
                                            "name": "IsBPFEntity",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['IsActivity']"
                                        },
                                        "sink": {
                                            "name": "IsActivity",
                                            "type": "Boolean"
                                        }
                                    }
                                ],
                                "collectionReference": "$['value']"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_d365dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "RelativeURL": {
                                        "value": "/api/data/v9.1/EntityDefinitions?$select=ChangeTrackingEnabled,IsIntersect,LogicalName,DisplayName,EntitySetName,IsBPFEntity,PrimaryIdAttribute,IsActivity",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_odssqltable",
                                "type": "DatasetReference",
                                "parameters": {
                                    "databaseSchema": "ODS",
                                    "tableName": "EntitySync"
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "annotations": [],
                "lastPublishTime": "2023-04-27T21:21:40Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_d365dataset')]",
                "[concat(variables('factoryId'), '/datasets/ds_odssqltable')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Schema Sync')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Entity Schema to ODS",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:01:40",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "sqlWriterStoredProcedureName": "[[ODS].[usp_LoadEntityAttributeSchema]",
                                "sqlWriterTableType": "ODS.EntityAttributeSchemaType",
                                "storedProcedureTableTypeParameterName": "passing",
                                "storedProcedureParameters": {
                                    "sourceTableName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.EntityName",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "dataIntegrationUnits": 2,
                            "translator": {
                                "value": "@json(string(pipeline().parameters.Mapping))",
                                "type": "Expression"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_d365dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "RelativeURL": {
                                        "value": "@pipeline().parameters.AttributeURL",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_odssqltable",
                                "type": "DatasetReference",
                                "parameters": {
                                    "databaseSchema": "ODS",
                                    "tableName": "EntityAttributeSchema"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Execute usp_SyncEntitySchema",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Validate Attributes",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[ODS].[usp_SyncEntitySchema]",
                            "storedProcedureParameters": {
                                "ExecutionId": {
                                    "value": {
                                        "value": "@pipeline().parameters.ExecutionId",
                                        "type": "Expression"
                                    },
                                    "type": "Guid"
                                },
                                "PrimaryIdAttribute": {
                                    "value": {
                                        "value": "@pipeline().parameters.PrimaryIdAttribute",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sourceEntityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.EntityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "StagingDBSchema": {
                                    "value": "Staging",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "Azure_Sql_ODS",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Update Mapping",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Execute usp_SyncEntitySchema",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[ODS].[usp_UpdateAttributeMapping_WithJson]",
                            "storedProcedureParameters": {
                                "isActivity": {
                                    "value": {
                                        "value": "@pipeline().parameters.IsActivity",
                                        "type": "Expression"
                                    },
                                    "type": "Boolean"
                                },
                                "primaryColumnName": {
                                    "value": {
                                        "value": "@pipeline().parameters.PrimaryIdAttribute",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "sourceTableName": {
                                    "value": {
                                        "value": "@pipeline().parameters.EntityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "Azure_Sql_ODS",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Validate Attributes",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Entity Schema to ODS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[ODS].[usp_ValidateAttributes]",
                            "storedProcedureParameters": {
                                "sourceTableName": {
                                    "value": {
                                        "value": "@pipeline().parameters.EntityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "Azure_Sql_ODS",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "EntityName": {
                        "type": "string",
                        "defaultValue": "account"
                    },
                    "AttributeURL": {
                        "type": "string",
                        "defaultValue": "/api/data/v9.0/EntityDefinitions(LogicalName='account')?$select=LogicalName&$expand=Attributes"
                    },
                    "Mapping": {
                        "type": "string",
                        "defaultValue": {
                            "type": "TabularTranslator",
                            "mappings": [
                                {
                                    "source": {
                                        "path": "[['Precision']"
                                    },
                                    "sink": {
                                        "name": "Precision",
                                        "type": "Int32"
                                    }
                                },
                                {
                                    "source": {
                                        "path": "[['MaxLength']"
                                    },
                                    "sink": {
                                        "name": "MaxLength",
                                        "type": "Int32"
                                    }
                                },
                                {
                                    "source": {
                                        "path": "[['DatabaseLength']"
                                    },
                                    "sink": {
                                        "name": "DatabaseLength",
                                        "type": "Int32"
                                    }
                                },
                                {
                                    "source": {
                                        "path": "[['AttributeOf']"
                                    },
                                    "sink": {
                                        "name": "AttributeOf",
                                        "type": "String"
                                    }
                                },
                                {
                                    "source": {
                                        "path": "[['AttributeType']"
                                    },
                                    "sink": {
                                        "name": "AttributeType",
                                        "type": "String"
                                    }
                                },
                                {
                                    "source": {
                                        "path": "[['EntityLogicalName']"
                                    },
                                    "sink": {
                                        "name": "EntityLogicalName",
                                        "type": "String"
                                    }
                                },
                                {
                                    "source": {
                                        "path": "[['IsPrimaryId']"
                                    },
                                    "sink": {
                                        "name": "IsPrimaryId",
                                        "type": "Boolean"
                                    }
                                },
                                {
                                    "source": {
                                        "path": "[['IsValidODataAttribute']"
                                    },
                                    "sink": {
                                        "name": "IsValidODataAttribute",
                                        "type": "Boolean"
                                    }
                                },
                                {
                                    "source": {
                                        "path": "[['IsPrimaryName']"
                                    },
                                    "sink": {
                                        "name": "IsPrimaryName",
                                        "type": "Boolean"
                                    }
                                },
                                {
                                    "source": {
                                        "path": "[['IsRetrievable']"
                                    },
                                    "sink": {
                                        "name": "IsRetrievable",
                                        "type": "Boolean"
                                    }
                                },
                                {
                                    "source": {
                                        "path": "[['LogicalName']"
                                    },
                                    "sink": {
                                        "name": "AttributeLogicalName",
                                        "type": "String"
                                    }
                                },
                                {
                                    "source": {
                                        "path": "[['SchemaName']"
                                    },
                                    "sink": {
                                        "name": "AttributeSchemaName",
                                        "type": "String"
                                    }
                                }
                            ],
                            "collectionReference": "$['Attributes']",
                            "mapComplexValuesToString": false
                        }
                    },
                    "ExecutionId": {
                        "type": "string",
                        "defaultValue": "5bb9a91b-7a39-4e51-a54e-c8ab8f132f5d"
                    },
                    "PrimaryIdAttribute": {
                        "type": "string",
                        "defaultValue": "accountid"
                    },
                    "IsActivity": {
                        "type": "bool",
                        "defaultValue": false
                    }
                },
                "variables": {
                    "testMap": {
                        "type": "String",
                        "defaultValue": "{   \"type\": \"TabularTranslator\",   \"mappings\": [     {       \"source\": {         \"path\": \"['AttributeOf']\"       },       \"sink\": {         \"name\": \"AttributeOf\",         \"type\": \"String\"       }     },     {       \"source\": {         \"path\": \"['AttributeType']\"       },       \"sink\": {         \"name\": \"AttributeType\",         \"type\": \"String\"       }     },     {       \"source\": {         \"path\": \"['EntityLogicalName']\"       },       \"sink\": {         \"name\": \"EntityLogicalName\",         \"type\": \"String\"       }     },     {       \"source\": {         \"path\": \"['IsPrimaryId']\"       },       \"sink\": {         \"name\": \"IsPrimaryId\",         \"type\": \"Boolean\"       }     },     {       \"source\": {         \"path\": \"['IsValidODataAttribute']\"       },       \"sink\": {         \"name\": \"IsValidODataAttribute\",         \"type\": \"Boolean\"       }     },     {       \"source\": {         \"path\": \"['IsPrimaryName']\"       },       \"sink\": {         \"name\": \"IsPrimaryName\",         \"type\": \"Boolean\"       }     },     {       \"source\": {         \"path\": \"['IsRetrievable']\"       },       \"sink\": {         \"name\": \"IsRetrievable\",         \"type\": \"Boolean\"       }     },     {       \"source\": {         \"path\": \"['LogicalName']\"       },       \"sink\": {         \"name\": \"AttributeLogicalName\",         \"type\": \"String\"       }     },     {       \"source\": {         \"path\": \"['SchemaName']\"       },       \"sink\": {         \"name\": \"AttributeSchemaName\",         \"type\": \"String\"       }     },     {       \"source\": {         \"path\": \"['MaxLength']\"       },       \"sink\": {         \"name\": \"MaxLength\",         \"type\": \"Int32\"       }     },     {       \"source\": {         \"path\": \"['DatabaseLength']\"       },       \"sink\": {         \"name\": \"DatabaseLength\",         \"type\": \"Int32\"       }     },     {       \"source\": {         \"path\": \"['Precision']\"       },       \"sink\": {         \"name\": \"Precision\",         \"type\": \"Int32\"       }     },     {       \"source\": {         \"path\": \"['AttributeTypeName']['Value']\"       },       \"sink\": {         \"name\": \"AttributeTypeName\",         \"type\": \"String\"       }     }   ],   \"collectionReference\": \"$['Attributes']\",   \"mapComplexValuesToString\": false }"
                    }
                },
                "folder": {
                    "name": "Helpers"
                },
                "annotations": [],
                "lastPublishTime": "2023-04-27T21:21:40Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_d365dataset')]",
                "[concat(variables('factoryId'), '/datasets/ds_odssqltable')]",
                "[concat(variables('factoryId'), '/linkedServices/Azure_Sql_ODS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/03 - Data Sync Master')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Entities to Sync",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('select EntityName,\ncase when ChangeTrackingEnabled = 1 then ''odata.track-changes,odata.include-annotations=\"*\"'' else ''odata.include-annotations=\"*\"'' end as HeaderPrefer,\ncase when datediff(day,LastSyncTimeStamp,GETDATE()) > ',variables('DeltaTokenExpirationInDays'),' then RelativeURL else ISNULL(DeltaToken, RelativeURL) end as URL,\nMapping, ChangeTrackingEnabled, IsNNRelationShip,PrimaryIdAttribute, FirstInsertMapping  from ODS.EntitySync where SyncReady = 1 \nand lower(SyncFrequency) = lower(''',pipeline().parameters.SyncFrequency,''') and (lower(''',json(string(pipeline().parameters.EntityName)).key,''')=''all'' or lower(''',json(string(pipeline().parameters.EntityName)).key,''') like ''%''+lower(EntityName)+''%'')')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_odssqltable",
                                "type": "DatasetReference",
                                "parameters": {
                                    "databaseSchema": "dbo",
                                    "tableName": "EntitySync"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach Entities Get Data",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Entities to Sync",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Entities to Sync').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "GetCount",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('select count(1) as RecordCount from ',item().EntityName)",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_odssqltable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "databaseSchema": "ODS",
                                                "tableName": "EntitySync"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "If First Run",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "GetCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(activity('GetCount').output.firstRow.RecordCount, 0)",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Upsert Data in table",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy Delta",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[ODS].[usp_InsertOrUpdateEntityTable]",
                                                    "storedProcedureParameters": {
                                                        "ExecutionId": {
                                                            "value": {
                                                                "value": "@pipeline().RunId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "primaryColumn": {
                                                            "value": {
                                                                "value": "@item().PrimaryIdAttribute",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "sourceTableName": {
                                                            "value": {
                                                                "value": "@item().EntityName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "Azure_Sql_ODS",
                                                    "type": "LinkedServiceReference"
                                                }
                                            },
                                            {
                                                "name": "Copy Delta",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.12:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "RestSource",
                                                        "httpRequestTimeout": "00:01:40",
                                                        "requestInterval": "00.00:00:00.010",
                                                        "requestMethod": "GET",
                                                        "additionalHeaders": {
                                                            "Cache-Control": "no-cache",
                                                            "OData-Version": "4.0",
                                                            "Content-Type": "application/json",
                                                            "Prefer": {
                                                                "value": "@item().HeaderPrefer",
                                                                "type": "Expression"
                                                            }
                                                        },
                                                        "paginationRules": {
                                                            "AbsoluteUrl": "$['@odata.nextLink']"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "AzureSqlSink",
                                                        "preCopyScript": {
                                                            "value": "@{concat('exec [ODS].[usp_CreateStagingTable] @PrimaryIdAttribute=''',item().PrimaryIdAttribute, ''', @sourceEntityName=''',item().EntityName,'''')}",
                                                            "type": "Expression"
                                                        },
                                                        "writeBehavior": "insert",
                                                        "sqlWriterUseTableLock": false,
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "enableSkipIncompatibleRow": true,
                                                    "logSettings": {
                                                        "enableCopyActivityLog": true,
                                                        "copyActivityLogSettings": {
                                                            "logLevel": "Warning",
                                                            "enableReliableLogging": false
                                                        },
                                                        "logLocationSettings": {
                                                            "linkedServiceName": {
                                                                "referenceName": "Blob",
                                                                "type": "LinkedServiceReference"
                                                            },
                                                            "path": "ods"
                                                        }
                                                    },
                                                    "dataIntegrationUnits": 2,
                                                    "translator": {
                                                        "value": "@json(string(item().Mapping))",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_d365dataset",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "RelativeURL": {
                                                                "value": "@item().URL",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_odssqltable",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "databaseSchema": "Staging",
                                                            "tableName": {
                                                                "value": "@item().EntityName",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Update Delta Token - 1",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Upsert Data in table",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "0.12:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[ODS].[usp_UpdateDeltaToken]",
                                                    "storedProcedureParameters": {
                                                        "sourceSchema": {
                                                            "value": "Staging",
                                                            "type": "String"
                                                        },
                                                        "sourceTableName": {
                                                            "value": {
                                                                "value": "@item().EntityName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineRunId": {
                                                            "value": {
                                                                "value": "@pipeline().RunId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "Azure_Sql_ODS",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "Copy D365 - Primary Table_copy1",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.12:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "RestSource",
                                                        "additionalColumns": [
                                                            {
                                                                "name": "ExecutionId",
                                                                "value": {
                                                                    "value": "@pipeline().RunId",
                                                                    "type": "Expression"
                                                                }
                                                            }
                                                        ],
                                                        "httpRequestTimeout": "00:01:40",
                                                        "requestInterval": "00.00:00:00.010",
                                                        "requestMethod": "GET",
                                                        "additionalHeaders": {
                                                            "Cache-Control": "no-cache",
                                                            "OData-Version": "4.0",
                                                            "Content-Type": "application/json",
                                                            "Prefer": {
                                                                "value": "@item().HeaderPrefer",
                                                                "type": "Expression"
                                                            }
                                                        },
                                                        "paginationRules": {
                                                            "AbsoluteUrl": "$['@odata.nextLink']"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "AzureSqlSink",
                                                        "writeBehavior": "insert",
                                                        "sqlWriterUseTableLock": false
                                                    },
                                                    "enableStaging": false,
                                                    "enableSkipIncompatibleRow": true,
                                                    "logSettings": {
                                                        "enableCopyActivityLog": true,
                                                        "copyActivityLogSettings": {
                                                            "logLevel": "Warning",
                                                            "enableReliableLogging": false
                                                        },
                                                        "logLocationSettings": {
                                                            "linkedServiceName": {
                                                                "referenceName": "Blob",
                                                                "type": "LinkedServiceReference"
                                                            },
                                                            "path": "ods"
                                                        }
                                                    },
                                                    "dataIntegrationUnits": 2,
                                                    "translator": {
                                                        "value": "@json(string(item().FirstInsertMapping))",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_d365dataset",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "RelativeURL": {
                                                                "value": "@item().URL",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_odssqltable",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "databaseSchema": "dbo",
                                                            "tableName": {
                                                                "value": "@item().EntityName",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Update Delta Token",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy D365 - Primary Table_copy1",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "0.12:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[ODS].[usp_UpdateDeltaToken]",
                                                    "storedProcedureParameters": {
                                                        "sourceSchema": {
                                                            "value": "dbo",
                                                            "type": "String"
                                                        },
                                                        "sourceTableName": {
                                                            "value": {
                                                                "value": "@item().EntityName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "pipelineRunId": {
                                                            "value": {
                                                                "value": "@pipeline().RunId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "Azure_Sql_ODS",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Log Details",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "If First Run",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ODS].[usp_ExecutionLogDetail]",
                                        "storedProcedureParameters": {
                                            "entityName": {
                                                "value": {
                                                    "value": "@item().EntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionId": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "Guid"
                                            },
                                            "LogType": {
                                                "value": "Error",
                                                "type": "String"
                                            },
                                            "Message": {
                                                "value": {
                                                    "value": "@concat('Error in data sync: ', item().EntityName)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "PipelineRunID": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "Guid"
                                            },
                                            "StepName": {
                                                "value": "Data Sync",
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "Azure_Sql_ODS",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "concurrency": 1,
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "SyncFrequency": {
                        "type": "string",
                        "defaultValue": "Daily"
                    },
                    "EntityName": {
                        "type": "string",
                        "defaultValue": {
                            "key": "all"
                        }
                    }
                },
                "variables": {
                    "ErrorMessage": {
                        "type": "String"
                    },
                    "DeltaTokenExpirationInDays": {
                        "type": "String",
                        "defaultValue": "21"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2023-04-27T21:21:40Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_odssqltable')]",
                "[concat(variables('factoryId'), '/linkedServices/Azure_Sql_ODS')]",
                "[concat(variables('factoryId'), '/datasets/ds_d365dataset')]",
                "[concat(variables('factoryId'), '/linkedServices/Blob')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/02 - Entity Schema Sync Master')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get All Entitites to Sync",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get Entity Name",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('select EntityName,AttributeSchemaURL,PrimaryIdAttribute,IsActivity from ODS.EntitySync where SyncReady = 1 \nand (lower(''',variables('entity'),''')=''all'' or lower(''',variables('entity'),''') like ''%''+lower(EntityName)+''%'')')\n",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_odssqltable",
                                "type": "DatasetReference",
                                "parameters": {
                                    "databaseSchema": "dbo",
                                    "tableName": "EntitySync"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach Entity",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get All Entitites to Sync",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get All Entitites to Sync').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 25,
                            "activities": [
                                {
                                    "name": "Schema Sync Helper",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Schema Sync",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "EntityName": {
                                                "value": "@item().EntityName",
                                                "type": "Expression"
                                            },
                                            "AttributeURL": {
                                                "value": "@item().AttributeSchemaURL",
                                                "type": "Expression"
                                            },
                                            "Mapping": {
                                                "value": "@variables('FieldMapping')",
                                                "type": "Expression"
                                            },
                                            "ExecutionId": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "PrimaryIdAttribute": {
                                                "value": "@item().PrimaryIdAttribute",
                                                "type": "Expression"
                                            },
                                            "IsActivity": {
                                                "value": "@item().IsActivity",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Log Error Schema Sync",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Schema Sync Helper",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ODS].[usp_LogEndExecution]",
                                        "storedProcedureParameters": {
                                            "ExecutionId": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "Guid"
                                            },
                                            "Message": {
                                                "value": {
                                                    "value": "@activity('Schema Sync Helper').Error.message",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "RunStatus": {
                                                "value": "Error",
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "Azure_Sql_ODS",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get Entity Name",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "entity",
                            "value": {
                                "value": "@json(string(pipeline().parameters.EntityName)).key",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "concurrency": 1,
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "EntityName": {
                        "type": "string",
                        "defaultValue": {
                            "key": "account"
                        }
                    }
                },
                "variables": {
                    "FieldMapping": {
                        "type": "String",
                        "defaultValue": "{   \"type\": \"TabularTranslator\",   \"mappings\": [     {       \"source\": { \"path\": \"['AttributeOf']\" },       \"sink\": {         \"name\": \"AttributeOf\",         \"type\": \"String\"       }     },     {       \"source\": { \"path\": \"['AttributeType']\" },       \"sink\": {         \"name\": \"AttributeType\",         \"type\": \"String\"       }     },     {       \"source\": { \"path\": \"['EntityLogicalName']\" },       \"sink\": {         \"name\": \"EntityLogicalName\",         \"type\": \"String\"       }     },     {       \"source\": { \"path\": \"['IsPrimaryId']\" },       \"sink\": {         \"name\": \"IsPrimaryId\",         \"type\": \"Boolean\"       }     },     {       \"source\": { \"path\": \"['IsValidODataAttribute']\" },       \"sink\": {         \"name\": \"IsValidODataAttribute\",         \"type\": \"Boolean\"       }     },     {       \"source\": { \"path\": \"['IsPrimaryName']\" },       \"sink\": {         \"name\": \"IsPrimaryName\",         \"type\": \"Boolean\"       }     },     {       \"source\": { \"path\": \"['LogicalName']\" },       \"sink\": {         \"name\": \"AttributeLogicalName\",         \"type\": \"String\"       }     },     {       \"source\": { \"path\": \"['SchemaName']\" },       \"sink\": {         \"name\": \"AttributeSchemaName\",         \"type\": \"String\"       }     },     {       \"source\": { \"path\": \"['MaxLength']\" },       \"sink\": {         \"name\": \"MaxLength\",         \"type\": \"Int32\"       }     },     {       \"source\": { \"path\": \"['DatabaseLength']\" },       \"sink\": {         \"name\": \"DatabaseLength\",         \"type\": \"Int32\"       }     },     {       \"source\": { \"path\": \"['Precision']\" },       \"sink\": {         \"name\": \"Precision\",         \"type\": \"Int32\"       }     },     {       \"source\": { \"path\": \"['IsRetrievable']\" },       \"sink\": {         \"name\": \"IsRetrievable\",         \"type\": \"Boolean\"       }     },     {       \"source\": { \"path\": \"['AttributeTypeName']['Value']\" },       \"sink\": {         \"name\": \"AttributeTypeName\",         \"type\": \"String\"       }     }   ],   \"collectionReference\": \"$['Attributes']\",   \"mapComplexValuesToString\": false }"
                    },
                    "ErrorMessage": {
                        "type": "String"
                    },
                    "entity": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2023-04-27T21:21:40Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_odssqltable')]",
                "[concat(variables('factoryId'), '/pipelines/Schema Sync')]",
                "[concat(variables('factoryId'), '/linkedServices/Azure_Sql_ODS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04 - Data Sync - OptionSets')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Entities",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Staging].[OptionSetMetadata]') AND type in (N'U'))\nBEGIN\nCREATE TABLE [Staging].[OptionSetMetadata](\n\t[EntityName] [varchar](128) NULL,\n\t[OptionJson] [varchar](max) NULL,\n\t[OptionType] [nvarchar](100) NULL,\n\t[OptionSetName] [nvarchar](128) NULL,\n\t[GlobalOptionSetName] [nvarchar](128) NULL,\n\t[IsGlobal] [bit] NULL\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\nEND\nELSE \nBEGIN\nTRUNCATE TABLE [Staging].[OptionSetMetadata];\nEND\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GlobalOptionSetMetadata]') AND type in (N'U'))\nBEGIN\nCREATE TABLE [dbo].[GlobalOptionSetMetadata](\n\t[OptionSetName] [nvarchar](128) NOT NULL,\n\t[Option] [int] NOT NULL,\n\t[IsUserLocalizedLabel] [bit] NOT NULL,\n\t[LocalizedLabelLanguageCode] [int] NOT NULL,\n\t[LocalizedLabel] [nvarchar](700) NULL,\n\t[GlobalOptionSetName] [varchar](128) NOT NULL DEFAULT(''),\n\t[EntityName] [varchar](128) NOT NULL,\nPRIMARY KEY CLUSTERED \n(\n\t[GlobalOptionSetName] ASC,\n\t[OptionSetName] ASC,\n\t[Option] ASC,\n\t[IsUserLocalizedLabel] ASC,\n\t[LocalizedLabelLanguageCode] ASC,\n\t[EntityName] ASC\n)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\n) ON [PRIMARY]\n\nEND\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[OptionSetMetadata]') AND type in (N'U'))\nBEGIN\nCREATE TABLE [dbo].[OptionSetMetadata](\n\t[EntityName] [nvarchar](128) NOT NULL,\n\t[OptionSetName] [nvarchar](128) NOT NULL,\n\t[Option] [int] NOT NULL,\n\t[IsUserLocalizedLabel] [bit] NOT NULL,\n\t[LocalizedLabelLanguageCode] [int] NOT NULL,\n\t[LocalizedLabel] [nvarchar](700) NULL,\nPRIMARY KEY CLUSTERED \n(\n\t[EntityName] ASC,\n\t[OptionSetName] ASC,\n\t[Option] ASC,\n\t[IsUserLocalizedLabel] ASC,\n\t[LocalizedLabelLanguageCode] ASC\n)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\n) ON [PRIMARY]\n\nEND\n\nselect \nEntityName,\nREPLACE(AttributeSchemaURL,'?$select=LogicalName&$expand=Attributes','/Attributes/Microsoft.Dynamics.CRM.BooleanAttributeMetadata?$select=LogicalName&$expand=GlobalOptionSet') as TwoOptionSetUrl,\nREPLACE(AttributeSchemaURL,'?$select=LogicalName&$expand=Attributes','/Attributes/Microsoft.Dynamics.CRM.PicklistAttributeMetadata?$select=LogicalName&$expand=GlobalOptionSet') as PickListUrl,\nREPLACE(AttributeSchemaURL,'?$select=LogicalName&$expand=Attributes','/Attributes/Microsoft.Dynamics.CRM.MultiSelectPicklistAttributeMetadata?$select=LogicalName&$expand=GlobalOptionSet')as MultiSelectUrl\nfrom ods.EntitySync\nwhere SyncReady = 1\n\n",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_odssqltable",
                                "type": "DatasetReference",
                                "parameters": {
                                    "databaseSchema": "ODS",
                                    "tableName": "EntitySync"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Entities",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Entities').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Copy Picklist",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "EntityName",
                                                    "value": {
                                                        "value": "@item().EntityName",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "UrlType",
                                                    "value": "PickList"
                                                }
                                            ],
                                            "httpRequestTimeout": "00:01:40",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "paginationRules": {
                                                "supportRFC5988": "true"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "writeBehavior": "insert",
                                            "sqlWriterUseTableLock": false
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 2,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['GlobalOptionSet']['Options']"
                                                    },
                                                    "sink": {
                                                        "name": "OptionJson"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['GlobalOptionSet']['Name']"
                                                    },
                                                    "sink": {
                                                        "name": "GlobalOptionSetName"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['GlobalOptionSet']['IsGlobal']"
                                                    },
                                                    "sink": {
                                                        "name": "IsGlobal"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['LogicalName']"
                                                    },
                                                    "sink": {
                                                        "name": "OptionSetName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['EntityName']"
                                                    },
                                                    "sink": {
                                                        "name": "EntityName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['UrlType']"
                                                    },
                                                    "sink": {
                                                        "name": "OptionType"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']",
                                            "mapComplexValuesToString": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_d365dataset",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "RelativeURL": {
                                                    "value": "@item().PickListUrl",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_odssqltable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "databaseSchema": "Staging",
                                                "tableName": "OptionSetMetadata"
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Log Error Picklist",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Picklist",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ODS].[usp_ExecutionLogDetail]",
                                        "storedProcedureParameters": {
                                            "entityName": {
                                                "value": {
                                                    "value": "@item().EntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionId": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "Guid"
                                            },
                                            "LogType": {
                                                "value": "Error",
                                                "type": "String"
                                            },
                                            "Message": {
                                                "value": {
                                                    "value": "@activity('Copy Picklist').output.errors[0].Message",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "PipelineRunID": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "Guid"
                                            },
                                            "StepName": {
                                                "value": "Picklist Optionset",
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "Azure_Sql_ODS",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Copy MultiSelect",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "EntityName",
                                                    "value": {
                                                        "value": "@item().EntityName",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "UrlType",
                                                    "value": "Multiselect"
                                                }
                                            ],
                                            "httpRequestTimeout": "00:01:40",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "paginationRules": {
                                                "supportRFC5988": "true"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "writeBehavior": "insert",
                                            "sqlWriterUseTableLock": false
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 2,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['GlobalOptionSet']['Options']"
                                                    },
                                                    "sink": {
                                                        "name": "OptionJson"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['GlobalOptionSet']['Name']"
                                                    },
                                                    "sink": {
                                                        "name": "GlobalOptionSetName"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['GlobalOptionSet']['IsGlobal']"
                                                    },
                                                    "sink": {
                                                        "name": "IsGlobal"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['LogicalName']"
                                                    },
                                                    "sink": {
                                                        "name": "OptionSetName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['EntityName']"
                                                    },
                                                    "sink": {
                                                        "name": "EntityName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['UrlType']"
                                                    },
                                                    "sink": {
                                                        "name": "OptionType"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']",
                                            "mapComplexValuesToString": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_d365dataset",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "RelativeURL": {
                                                    "value": "@item().MultiSelectUrl",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_odssqltable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "databaseSchema": "Staging",
                                                "tableName": "OptionSetMetadata"
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Log Error Picklist_copy1",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy MultiSelect",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ODS].[usp_ExecutionLogDetail]",
                                        "storedProcedureParameters": {
                                            "entityName": {
                                                "value": {
                                                    "value": "@item().EntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionId": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "Guid"
                                            },
                                            "LogType": {
                                                "value": "Error",
                                                "type": "String"
                                            },
                                            "Message": {
                                                "value": {
                                                    "value": "@activity('Copy MultiSelect').output.errors[0].Message",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "PipelineRunID": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "Guid"
                                            },
                                            "StepName": {
                                                "value": "Picklist Optionset",
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "Azure_Sql_ODS",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Copy TwoOption - True",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "EntityName",
                                                    "value": {
                                                        "value": "@item().EntityName",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "UrlType",
                                                    "value": "TwoOption"
                                                }
                                            ],
                                            "httpRequestTimeout": "00:01:40",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "paginationRules": {
                                                "supportRFC5988": "true"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "writeBehavior": "insert",
                                            "sqlWriterUseTableLock": false
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 2,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['LogicalName']"
                                                    },
                                                    "sink": {
                                                        "name": "OptionSetName"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['GlobalOptionSet']['IsGlobal']"
                                                    },
                                                    "sink": {
                                                        "name": "IsGlobal"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['GlobalOptionSet']['Name']"
                                                    },
                                                    "sink": {
                                                        "name": "GlobalOptionSetName"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['GlobalOptionSet']['TrueOption']"
                                                    },
                                                    "sink": {
                                                        "name": "OptionJson"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['EntityName']"
                                                    },
                                                    "sink": {
                                                        "name": "EntityName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['UrlType']"
                                                    },
                                                    "sink": {
                                                        "name": "OptionType",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']",
                                            "mapComplexValuesToString": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_d365dataset",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "RelativeURL": {
                                                    "value": "@item().TwoOptionSetUrl",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_odssqltable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "databaseSchema": "Staging",
                                                "tableName": "OptionSetMetadata"
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Log Error Picklist_copy2",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy TwoOption - True",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ODS].[usp_ExecutionLogDetail]",
                                        "storedProcedureParameters": {
                                            "entityName": {
                                                "value": {
                                                    "value": "@item().EntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionId": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "Guid"
                                            },
                                            "LogType": {
                                                "value": "Error",
                                                "type": "String"
                                            },
                                            "Message": {
                                                "value": {
                                                    "value": "@activity('Copy TwoOption - True').output.errors[0].Message",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "PipelineRunID": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "Guid"
                                            },
                                            "StepName": {
                                                "value": "Picklist Optionset",
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "Azure_Sql_ODS",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Copy TwoOption - False",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "EntityName",
                                                    "value": {
                                                        "value": "@item().EntityName",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "UrlType",
                                                    "value": "TwoOption"
                                                }
                                            ],
                                            "httpRequestTimeout": "00:01:40",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "paginationRules": {
                                                "supportRFC5988": "true"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "writeBehavior": "insert",
                                            "sqlWriterUseTableLock": false
                                        },
                                        "enableStaging": false,
                                        "dataIntegrationUnits": 2,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['LogicalName']"
                                                    },
                                                    "sink": {
                                                        "name": "OptionSetName"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['GlobalOptionSet']['IsGlobal']"
                                                    },
                                                    "sink": {
                                                        "name": "IsGlobal"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['GlobalOptionSet']['Name']"
                                                    },
                                                    "sink": {
                                                        "name": "GlobalOptionSetName"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['GlobalOptionSet']['FalseOption']"
                                                    },
                                                    "sink": {
                                                        "name": "OptionJson"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['EntityName']"
                                                    },
                                                    "sink": {
                                                        "name": "EntityName",
                                                        "type": "String"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "$['UrlType']"
                                                    },
                                                    "sink": {
                                                        "name": "OptionType",
                                                        "type": "String"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']",
                                            "mapComplexValuesToString": true
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_d365dataset",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "RelativeURL": {
                                                    "value": "@item().TwoOptionSetUrl",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_odssqltable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "databaseSchema": "Staging",
                                                "tableName": "OptionSetMetadata"
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Log Error Picklist_copy2_copy1",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy TwoOption - False",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ODS].[usp_ExecutionLogDetail]",
                                        "storedProcedureParameters": {
                                            "entityName": {
                                                "value": {
                                                    "value": "@item().EntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionId": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "Guid"
                                            },
                                            "LogType": {
                                                "value": "Error",
                                                "type": "String"
                                            },
                                            "Message": {
                                                "value": {
                                                    "value": "@activity('Copy TwoOption - False').output.errors[0].Message",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "PipelineRunID": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "Guid"
                                            },
                                            "StepName": {
                                                "value": "Picklist Optionset",
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "Azure_Sql_ODS",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ODS-usp_UpsertOptionSetMetadata",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ForEach1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[ODS].[usp_UpsertOptionSetMetadata]"
                        },
                        "linkedServiceName": {
                            "referenceName": "Azure_Sql_ODS",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "variables": {
                    "StringMapQuery": {
                        "type": "String",
                        "defaultValue": "select objecttypecode as EntityName, attributename as OptionSetName, attributevalue as [Option], 0 as [IsUserLocalizedLabel], langid as [LocalizedLabelLanguageCode], value as [LocalizedLabel], 0 as IsGlobal from stringmap where objecttypecode = 'account'"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2023-04-27T22:36:10Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_odssqltable')]",
                "[concat(variables('factoryId'), '/linkedServices/Azure_Sql_ODS')]",
                "[concat(variables('factoryId'), '/datasets/ds_d365dataset')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Azure_Sql_ODS')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('Azure_Sql_ODS_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Blob')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Blob storage to track failed records during sync",
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": "[parameters('Blob_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/D365_Rest_Service')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "RestService",
                "typeProperties": {
                    "url": "[parameters('D365_Rest_Service_properties_typeProperties_url')]",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "AadServicePrincipal",
                    "servicePrincipalId": "[parameters('D365_Rest_Service_properties_typeProperties_servicePrincipalId')]",
                    "servicePrincipalKey": {
                        "type": "SecureString",
                        "value": "[parameters('D365_Rest_Service_servicePrincipalKey')]"
                    },
                    "tenant": "[parameters('D365_Rest_Service_properties_typeProperties_tenant')]",
                    "aadResourceId": "[parameters('D365_Rest_Service_properties_typeProperties_aadResourceId')]",
                    "azureCloudType": "AzurePublic"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/kv_linkedservice')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[parameters('kv_linkedservice_properties_typeProperties_baseUrl')]"
                }
            },
            "dependsOn": []
        }
    ]
}